------------------------------------------
(프로젝트4) 채팅-화이트보드 서비스
------------------------------------------

=======
(준비작업)
=======
(1) 터미널창을 <proj4>폴더안에서 열고 다음 명령어로 영화 서버 가동
	node movie-server.js   // 포트(52273) 사용함

(2) 터미널창을 <proj4>폴더안에서 열고 다음 명령어로 화이트보드 서버 가동
	node app-whiteboard.js   // 포트(52274) 사용함

(3) 웹프로그램 실행은 "Live Server"를 사용하지 않고 "node.js"에서 서버 프로그램을 실행하며,
     브라우저에서 다음 주소들을 직접 입력한다.
              http://127.0.0.1:52274/proj4.html            // 제공 예제 프로그램 실행
              http://127.0.0.1:52274/proj4-final.html     // 완성 프로그램 실행


(참고) 네트워크 포트 배정상황
 1) 52273: 로칼 <상영영화> 서버 (movie-server.js)
 2) 52274: 웹서버 (proj4.html, proj4-final.html 요청처리)
               <화이트보드> 서비스 (whiteboard.js - proj4.html 내부와 연계)
               <채팅> & <화이트보드> 서비스 (broadcast.js - proj4-final.html 내부와 연계)



=======================
(프로젝트4) 채팅-화이트보드 서비스
=======================

완성 프로그램(proj4-final.html)을 실행하여 브라우저화면의 "공유칠판" 탭, "웹채팅" 탭 기능이
2개 첨부파일 이미지("(완성프로그램) (공유칠판) 동작화면.png", "(완성프로그램) (웹채팅) 동작화면.png")와 같이 
브라우저에서 기능하도록, 제공 프로그램(app-whiteboard.js, proj4.html, css/style-4.css, js/whiteboard.js)을 
제출 프로그램(app-broadcast.js, proj4-final.html, css/style-final-4.css, js/broadcast.js)으로 복사한 다음, 제공 프로그램을 
분석하여 다음과 같은 요구사양을 만족하도록 node.js/HTML/CSS/Javascript 기능을 (추가&변경)->(완성)->(제출)하라.

  (요구사양)
    (1) "공유칠판" 탭에서 펜 색깔 선택 기능 추가 구현
    (2) "공유칠판" 탭에서 캔버스 리셋 기능 추가 구현
    (3) "웹채팅" 탭에서 복수개 브라우저 간 채팅 기능 구현
    (4) 2개 콜라보레이션(공유칠판, 웹채팅) 기능을 제공하는 서버프로그램 기능 확장(app-broadcast.js)

  (제공 프로그램)
    - proj4.html, css/style-4.css, js/whiteboard.js                             //  (프로젝트4) start-up 단계 프로그램, (프로젝트3) 정답 포함
                                                                                            //   화이트보드 기본 기능이 구현되어 있음 

    - app-whiteboard.js                                           // "공유칠판" 전용 서버 프로그램
                                                                          //    -->  app-whiteboard.js을 app-broadcast.js로 복사한 후 "웹채팅" 서버 기능 추가함
                                                                          //    -->  서버 프로그램 완성 후 기존서버(app-whiteboard.js) 프로그램을 먼저 중지시키고
                                                                          //    -->  통합서버(app-broadcast.js) 실행은 "node app-broadcast.js" 명령어로 실행하면 됨
